local a={Enabled=false,Boxes=true,BoxShift=CFrame.new(0,-1.5,0),BoxSize=Vector3.new(4,6,0),Color=Color3.fromRGB(255,0,0),FaceCamera=false,Names=true,TeamColor=true,Thickness=1,AttachShift=1,TeamMates=true,Players=true,Objects=setmetatable({},{__mode="kv"}),Overrides={}}local b=workspace.CurrentCamera;local c=game:GetService("Players")local d=c.LocalPlayer;local e=d:GetMouse()local f=Vector3.new;local g=b.WorldToViewportPoint;local function h(i,j)local k=Drawing.new(i)j=j or{}for l,m in pairs(j)do k[l]=m end;return k end;function a:GetTeam(n)local o=self.Overrides.GetTeam;if o then return o(n)end;return n and n.Team end;function a:IsTeamMate(n)local o=self.Overrides.IsTeamMate;if o then return o(n)end;return self:GetTeam(n)==self:GetTeam(d)end;function a:GetColor(i)local o=self.Overrides.GetColor;if o then return o(i)end;local n=self:GetPlrFromChar(i)return n and self.TeamColor and n.Team and n.Team.TeamColor.Color or self.Color end;function a:GetPlrFromChar(p)local o=self.Overrides.GetPlrFromChar;if o then return o(p)end;return c:GetPlayerFromCharacter(p)end;function a:Toggle(q)self.Enabled=q;if not q then for l,m in pairs(self.Objects)do if m.Type=="Box"then if m.Temporary then m:Remove()else for l,m in pairs(m.Components)do m.Visible=false end end end end end end;function a:GetBox(i)return self.Objects[i]end;function a:AddObjectListener(r,s)local function t(u)if type(s.Type)=="string"and u:IsA(s.Type)or s.Type==nil then if type(s.Name)=="string"and u.Name==s.Name or s.Name==nil then if not s.Validator or s.Validator(u)then local v=a:Add(u,{PrimaryPart=type(s.PrimaryPart)=="string"and u:WaitForChild(s.PrimaryPart)or type(s.PrimaryPart)=="function"and s.PrimaryPart(u),Color=type(s.Color)=="function"and s.Color(u)or s.Color,ColorDynamic=s.ColorDynamic,Name=type(s.CustomName)=="function"and s.CustomName(u)or s.CustomName,IsEnabled=s.IsEnabled,RenderInNil=s.RenderInNil})if s.OnAdded then coroutine.wrap(s.OnAdded)(v)end end end end end;if s.Recursive then r.DescendantAdded:Connect(t)for l,m in pairs(r:GetDescendants())do coroutine.wrap(t)(m)end else r.ChildAdded:Connect(t)for l,m in pairs(r:GetChildren())do coroutine.wrap(t)(m)end end end;local w={}w.__index=w;function w:Remove()a.Objects[self.Object]=nil;for l,m in pairs(self.Components)do m.Visible=false;m:Remove()self.Components[l]=nil end end;function w:Update()if not self.PrimaryPart then return self:Remove()end;local color;if a.Highlighted==self.Object then color=a.HighlightColor else color=self.Color or self.ColorDynamic and self:ColorDynamic()or a:GetColor(self.Object)or a.Color end;local x=true;if a.Overrides.UpdateAllow and not a.Overrides.UpdateAllow(self)then x=false end;if self.Player and not a.TeamMates and a:IsTeamMate(self.Player)then x=false end;if self.Player and not a.Players then x=false end;if self.IsEnabled and(type(self.IsEnabled)=="string"and not a[self.IsEnabled]or type(self.IsEnabled)=="function"and not self:IsEnabled())then x=false end;if not workspace:IsAncestorOf(self.PrimaryPart)and not self.RenderInNil then x=false end;if not x then for l,m in pairs(self.Components)do m.Visible=false end;return end;if a.Highlighted==self.Object then color=a.HighlightColor end;local y=self.PrimaryPart.CFrame;if a.FaceCamera then y=CFrame.new(y.p,b.CFrame.p)end;local z=self.Size;local A={TopLeft=y*a.BoxShift*CFrame.new(z.X/2,z.Y/2,0),TopRight=y*a.BoxShift*CFrame.new(-z.X/2,z.Y/2,0),BottomLeft=y*a.BoxShift*CFrame.new(z.X/2,-z.Y/2,0),BottomRight=y*a.BoxShift*CFrame.new(-z.X/2,-z.Y/2,0),TagPos=y*a.BoxShift*CFrame.new(0,z.Y/2,0),Torso=y*a.BoxShift}if a.Boxes then local B,C=g(b,A.TopLeft.p)local D,E=g(b,A.TopRight.p)local F,G=g(b,A.BottomLeft.p)local H,I=g(b,A.BottomRight.p)if self.Components.Quad then if C or E or G or I then self.Components.Quad.Visible=true;self.Components.Quad.PointA=Vector2.new(D.X,D.Y)self.Components.Quad.PointB=Vector2.new(B.X,B.Y)self.Components.Quad.PointC=Vector2.new(F.X,F.Y)self.Components.Quad.PointD=Vector2.new(H.X,H.Y)self.Components.Quad.Color=color else self.Components.Quad.Visible=false end end else self.Components.Quad.Visible=false end;if a.Names then local J,K=g(b,A.TagPos.p)if K then self.Components.Name.Visible=true;self.Components.Name.Position=Vector2.new(J.X,J.Y)self.Components.Name.Text=self.Name;self.Components.Name.Color=color;self.Components.Distance.Visible=true;self.Components.Distance.Position=Vector2.new(J.X,J.Y+14)self.Components.Distance.Text=math.floor((b.CFrame.p-y.p).magnitude).."m away"self.Components.Distance.Color=color else self.Components.Name.Visible=false;self.Components.Distance.Visible=false end else self.Components.Name.Visible=false;self.Components.Distance.Visible=false end;if a.Tracers then local L,M=g(b,A.Torso.p)if M then self.Components.Tracer.Visible=true;self.Components.Tracer.From=Vector2.new(L.X,L.Y)self.Components.Tracer.To=Vector2.new(b.ViewportSize.X/2,b.ViewportSize.Y/a.AttachShift)self.Components.Tracer.Color=color else self.Components.Tracer.Visible=false end else self.Components.Tracer.Visible=false end end;function a:Add(i,s)if not i.Parent and not s.RenderInNil then return warn(i,"has no parent")end;local v=setmetatable({Name=s.Name or i.Name,Type="Box",Color=s.Color,Size=s.Size or self.BoxSize,Object=i,Player=s.Player or c:GetPlayerFromCharacter(i),PrimaryPart=s.PrimaryPart or i.ClassName=="Model"and(i.PrimaryPart or i:FindFirstChild("HumanoidRootPart")or i:FindFirstChildWhichIsA("BasePart"))or i:IsA("BasePart")and i,Components={},IsEnabled=s.IsEnabled,Temporary=s.Temporary,ColorDynamic=s.ColorDynamic,RenderInNil=s.RenderInNil},w)if self:GetBox(i)then self:GetBox(i):Remove()end;v.Components["Quad"]=h("Quad",{Thickness=self.Thickness,Color=color,Transparency=1,Filled=false,Visible=self.Enabled and self.Boxes})v.Components["Name"]=h("Text",{Text=v.Name,Color=v.Color,Center=true,Outline=true,Size=19,Visible=self.Enabled and self.Names})v.Components["Distance"]=h("Text",{Color=v.Color,Center=true,Outline=true,Size=19,Visible=self.Enabled and self.Names})v.Components["Tracer"]=h("Line",{Thickness=a.Thickness,Color=v.Color,Transparency=1,Visible=self.Enabled and self.Tracers})self.Objects[i]=v;i.AncestryChanged:Connect(function(N,r)if r==nil and a.AutoRemove~=false then v:Remove()end end)i:GetPropertyChangedSignal("Parent"):Connect(function()if i.Parent==nil and a.AutoRemove~=false then v:Remove()end end)local O=i:FindFirstChildOfClass("Humanoid")if O then O.Died:Connect(function()if a.AutoRemove~=false then v:Remove()end end)end;return v end;local function P(p)local n=c:GetPlayerFromCharacter(p)if not p:FindFirstChild("HumanoidRootPart")then local Q;Q=p.ChildAdded:Connect(function(u)if u.Name=="HumanoidRootPart"then Q:Disconnect()a:Add(p,{Name=n.Name,Player=n,PrimaryPart=u})end end)else a:Add(p,{Name=n.Name,Player=n,PrimaryPart=p.HumanoidRootPart})end end;local function R(n)n.CharacterAdded:Connect(P)if n.Character then coroutine.wrap(P)(n.Character)end end;c.PlayerAdded:Connect(R)for l,m in pairs(c:GetPlayers())do if m~=d then R(m)end end;game:GetService("RunService").RenderStepped:Connect(function()b=workspace.CurrentCamera;for l,m in a.Enabled and pairs or ipairs(a.Objects)do if m.Update then local S,T=pcall(m.Update,m)if not S then warn("[EU]",T,m.Object:GetFullName())end end end end)return a
